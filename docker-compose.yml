services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - DB_HOST=mysql
      - DB_DATABASE=laravel 
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
    networks:
      - laravel-network

  # Nginx Service
  web:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - laravel-network

  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel-network

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin
    container_name: laravel-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - laravel-network
      
  # MinIO (S3-compatible object storage)
  minio:
    image: minio/minio
    container_name: laravel-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - laravel-network

  # Create MinIO buckets
  createbuckets:
    image: minio/mc
    container_name: laravel-createbuckets
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb myminio/docuflow;
      /usr/bin/mc policy set public myminio/docuflow;
      exit 0;
      "
    networks:
      - laravel-network

volumes:
  mysql_data:
    driver: local
  minio_data:
    driver: local

networks:
  laravel-network:
    driver: bridge